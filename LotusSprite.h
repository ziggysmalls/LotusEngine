#ifndef _LotusSprite
#define _LotusSprite
#include "Matrix.h"
class GraphicsObject_Sprite;

class Camera;

class LotusSprite
{
private:

	float angle = 0.0f;
	float centerX = 0.0f;
	float centerY = 0.0f;
	float scaleX = 1.0f;
	float scaleY = 1.0f;

	Matrix Scale;
	Matrix Trans;
	Matrix RotZ;
	Matrix world;

	GraphicsObject_Sprite* pGO_Sprite;
	

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the angle. </summary>
	///
	/// <remarks>	Ezequ, 3/3/2021. </remarks>
	///
	/// <returns>	The angle. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	float GetAngle();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Default constructor. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	LotusSprite();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Destructor. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual ~LotusSprite();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Constructor. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="imgKey">	The image key. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	LotusSprite(std::string imgKey);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \ingroup SPRITE
	/// <summary>	Renders the given pcam. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="pcam">	[in,out] If non-null, the pcam. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void Render(Camera* pcam);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets an angle. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="a">	A float to process. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetAngle(float a);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets a center. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="offsetx">	The offsetx. </param>
	/// <param name="offsety">	The offsety. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetCenter(float offsetx, float offsety);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets a position. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="x">	The x coordinate. </param>
	/// <param name="y">	The y coordinate. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetPosition(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets scale factor. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="scalex">	The scalex. </param>
	/// <param name="scaley">	The scaley. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetScaleFactor(float scalex, float scaley);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets scale pixel. </summary>
	///
	/// <remarks>	Ezequiel Arrieta, 3/3/2021. </remarks>
	///
	/// <param name="width"> 	The width. </param>
	/// <param name="height">	The height. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetScalePixel(float width, float height);
	float GetWidth();
	float GetHeight();

};
#endif _LotusSprite
